{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/dbconnect.service.ts","webpack:///./src/app/material/material.module.ts","webpack:///./src/app/studentsdetail/dialogbox/dialogbox.component.css","webpack:///./src/app/studentsdetail/dialogbox/dialogbox.component.html","webpack:///./src/app/studentsdetail/dialogbox/dialogbox.component.ts","webpack:///./src/app/studentsdetail/studentsdetail.component.css","webpack:///./src/app/studentsdetail/studentsdetail.component.html","webpack:///./src/app/studentsdetail/studentsdetail.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\r\\n\\r\\n.example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 800px;\\r\\n    width: 100%;\\r\\n     margin:10px;\\r\\n  }\\r\\n  \\r\\n  input{\\r\\n    width: 100%;\\r\\n    display: block;\\r\\n  }\\r\\n  \\r\\n  input[type=number]::-webkit-inner-spin-button, \\r\\ninput[type=number]::-webkit-outer-spin-button { \\r\\n  -webkit-appearance: none; \\r\\n  margin: 0; \\r\\n}\\r\\n  \\r\\n  input[type=\\\"date\\\"]::-webkit-inner-spin-button,\\r\\ninput[type=\\\"date\\\"]::-webkit-calendar-picker-indicator {\\r\\n    display: none;\\r\\n    -webkit-appearance: none;\\r\\n}\\r\\n  \\r\\n  mat-form-field{\\r\\n  padding-right: 10px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztLQUNWLFdBQVc7RUFDZDs7RUFFQTtJQUNFLFdBQVc7SUFDWCxjQUFjO0VBQ2hCOztFQUdGOztFQUVFLHdCQUF3QjtFQUN4QixTQUFTO0FBQ1g7O0VBRUE7O0lBRUksYUFBYTtJQUNiLHdCQUF3QjtBQUM1Qjs7RUFFQTtFQUNFLG1CQUFtQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiXHJcblxyXG4uZXhhbXBsZS1mb3JtIHtcclxuICAgIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgbWFyZ2luOjEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIGlucHV0e1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBkaXNwbGF5OiBibG9jaztcclxuICB9XHJcblxyXG5cclxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLCBcclxuaW5wdXRbdHlwZT1udW1iZXJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHsgXHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lOyBcclxuICBtYXJnaW46IDA7IFxyXG59XHJcblxyXG5pbnB1dFt0eXBlPVwiZGF0ZVwiXTo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbixcclxuaW5wdXRbdHlwZT1cImRhdGVcIl06Oi13ZWJraXQtY2FsZW5kYXItcGlja2VyLWluZGljYXRvciB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xyXG59XHJcblxyXG5tYXQtZm9ybS1maWVsZHtcclxuICBwYWRkaW5nLXJpZ2h0OiAxMHB4O1xyXG59Il19 */\"","module.exports = \" <div class=\\\"container pb-5\\\">\\n     <span class=\\\"h5 text-center\\\"> This app focused on CRUD operation with Mongodb, Angular Component Interaction , services and Material</span>\\n     <div class=\\\"row\\\">\\n         <div class=\\\"col-md-12\\\">\\n                <mat-card> \\n                        <h1 class=\\\"text-center\\\"> Student Registration</h1>\\n                        <mat-divider></mat-divider>\\n                    <form #formRef class=\\\"example-form mt-4\\\" [formGroup]=\\\"student\\\" (ngSubmit)=\\\"submitData(formRef)\\\">\\n                       \\n                        <mat-form-field>\\n                            <mat-label>StudentName</mat-label>\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"name\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <mat-label>Fathername</mat-label>\\n                            <input matInput type=\\\"text\\\" formControlName=\\\"fathername\\\">\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                              <input matInput [matDatepicker]=\\\"Datepicker\\\" formControlName=\\\"dob\\\">\\n                              <mat-label>DateOfBirth</mat-label>\\n                              <mat-datepicker-toggle  [for]=\\\"Datepicker\\\" matSuffix></mat-datepicker-toggle>\\n                               <mat-datepicker #Datepicker></mat-datepicker>\\n                        </mat-form-field>\\n                        <mat-form-field>\\n                            <mat-label>Age</mat-label>\\n                            <input matInput type=\\\"number\\\" formControlName=\\\"age\\\">\\n                        </mat-form-field>\\n                      \\n                       \\n                         <h4>Address</h4>\\n                         <div formGroupName=\\\"address\\\" >\\n                         <mat-form-field class=\\\"w-100\\\">\\n                             <mat-label>Street</mat-label>\\n                             <input matInput type=\\\"text\\\" formControlName=\\\"street\\\">\\n                         </mat-form-field>\\n                         <mat-form-field>\\n                              <mat-label>city</mat-label>\\n                              <input matInput type=\\\"text\\\" formControlName=\\\"city\\\">\\n                          </mat-form-field>\\n                          <mat-form-field>\\n                                <mat-label>State</mat-label>\\n                                <input matInput type=\\\"text\\\" formControlName=\\\"state\\\">\\n                            </mat-form-field>\\n                            <mat-form-field>\\n                                   <mat-label>Pincode</mat-label>\\n                                  <input matInput type=\\\"number\\\" formControlName=\\\"pincode\\\">\\n                              </mat-form-field>\\n                          </div>\\n                         \\n                          <div *ngIf=\\\"studentId;  else submitbtn\\\">\\n                       <button  type=\\\"submit\\\" class=\\\"mr-3\\\"  color=\\\"warn\\\" mat-raised-button>Update</button>\\n                       <button type=\\\"button\\\" (click)=\\\"resetForm(formRef)\\\" color=\\\"primary\\\" mat-stroked-button>Discard</button>\\n                      </div>\\n                      <ng-template #submitbtn> \\n                      <div>\\n                          <button type=\\\"submit\\\" color=\\\"primary\\\" mat-raised-button>Submit</button>\\n                         </div>\\n                      </ng-template>\\n                    </form>\\n                  </mat-card>\\n\\n         </div>\\n         <div class=\\\"col-md-12\\\">\\n                <mat-card>\\n    <h1 class=\\\"text-center m-3\\\"> All Student Information</h1>\\n    <app-studentsdetail\\n     (updateFormEvent)=\\\"dataFromTable($event)\\\" \\n     (deletedataEvent)=\\\"deleteData($event)\\\"\\n       #studendChildComponent>\\n   </app-studentsdetail>\\n       </mat-card>\\n         </div>\\n     </div>\\n     \\n    <mat-divider></mat-divider>\\n    \\n    \\n  </div> \\n  \\n  <router-outlet></router-outlet>\\n\\n\\n\\n\"","import { Component, ViewChild , ChangeDetectorRef } from '@angular/core';\nimport { FormGroup, FormControl, NgForm } from '@angular/forms';\nimport { DbconnectService } from './dbconnect.service';\nimport { Source } from './interface/studentData' ;\nimport * as _ from 'lodash';\nimport { StudentsdetailComponent } from './studentsdetail/studentsdetail.component';\n\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\npublic formGroup: FormGroup;\npublic studentId: string;\n\n\npublic student = new FormGroup({\nname: new FormControl(''),\nfathername: new FormControl(''),\nage: new FormControl(''),\ndob: new FormControl(''),\n\naddress: new FormGroup({\n street:  new FormControl(''),\n city:  new FormControl(''),\n state:  new FormControl(''),\n pincode:  new FormControl(''),\n})\n\n  });\n\n\nconstructor(public dataBase: DbconnectService,\n            public cd: ChangeDetectorRef ) {\n\n}\n\n@ViewChild('studendChildComponent') studentComponent: StudentsdetailComponent;\n\npublic submitData(form: NgForm) {\n  if (this.studentId) {\nthis.updateStudent(form, this.student, this.studentId)\n.then(() => {\n  this.studentId = '';\n  this.studentComponent.ngOnInit();\n}\n\n).catch((err) => console.log(err));\n// this.cd.detectChanges();\n\n  } else {\nthis.postData(form , this.student).then(\n () => {\n  this.studentComponent.ngOnInit();\n }\n\n);\n\n\n  }\n\n}\n\n// posting data to database\n\npublic postData(form: NgForm, studentformModule) {\n\n  return new Promise ((resolve, reject) => {\n    const student: Source = studentformModule.value;\n    this.dataBase.registerStudent(student).subscribe(\n        (res) => {\n          form.reset();\n          resolve(res);\n        },\n         (err) => {\n          reject(err);\n         });\n\n  });\n\n\n  }\n\n// getting updated data from child;\n\npublic dataFromTable($event) {\n    console.log($event);\n    this.studentId = $event._id;\n    this.student.setValue(_.omit($event, '_id', '__v'));\n  }\n\n// updating  data to database\n\npublic updateStudent(form: NgForm, student: FormGroup, studentId: string) {\n  return new Promise( (resolve, reject) => {\n    const updatedstudent: Source = student.value;\n    this.dataBase.updateStudent(updatedstudent, studentId).subscribe(\n      (res) => {\n        form.reset();\n        resolve(res);\n      },\n       (err) => {\n        reject(err);\n       });\n  });\n}\n\n// reset the form\npublic resetForm(formRef) {\n  formRef.reset();\n  this.studentId = '';\n}\n\n\n// getting request to delete data in database\n\npublic deleteData($event: string) {\n  return new Promise( (resolve, reject) => {\n    this.dataBase.deleteStudent($event).subscribe(\n      (res) => {\n        console.log(res);\n        resolve(res);\n      } ,\n      (err) => {\n        reject(err);\n        console.log(err);\n      });\n  }).then(() => {\n    this.studentComponent.ngOnInit();\n  });\n\n\n}\n\ninitiateTable(studentComponent) {\n studentComponent.ngOnInit();\n}\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { StudentsdetailComponent } from './studentsdetail/studentsdetail.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DialogboxComponent } from './studentsdetail/dialogbox/dialogbox.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    StudentsdetailComponent,\n    DialogboxComponent\n  ],\n  entryComponents: [DialogboxComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MaterialModule,\n    HttpClientModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders , HttpErrorResponse  } from '@angular/common/http';\r\nimport { Source , Message } from './interface/studentData';\r\n\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map, tap } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class DbconnectService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\nprivate handleError(error: HttpErrorResponse) {\r\n\r\n return throwError(error);\r\n\r\n}\r\n\r\n// posting datum to database\r\n\r\npublic registerStudent(data): Observable<Source> {\r\n\r\n  const header = new HttpHeaders();\r\n  header.append('Content-Type' , 'application/json');\r\n\r\n  return this.http.post<Source>('/student/register', data , {headers: header})\r\n  .pipe(\r\n    tap( (student) => console.log('successfully posted' + student)\r\n    ),\r\n    catchError(this.handleError),\r\n  );\r\n}\r\n\r\n// fetching data from database\r\npublic allStudents(): Observable<Source[]> {\r\n\r\n   return this.http.get<Source[]>('/student/').pipe(\r\n   catchError(this.handleError),\r\n    );\r\n}\r\n\r\n// updating datum in database\r\npublic updateStudent(data, id): Observable<Source> {\r\n\r\n  const header = new HttpHeaders();\r\n  header.append('Content-Type' , 'application/json');\r\n\r\n  return this.http.put<Source>('/student/register/' + id, data , {headers: header})\r\n  .pipe(\r\n  catchError(this.handleError),\r\n  );\r\n}\r\n\r\n\r\npublic deleteStudent(id: string): Observable<Message> {\r\n\r\n return  this.http.delete<Message>('/student/register/' + id)\r\n  .pipe(\r\n      catchError(this.handleError),\r\n  );\r\n\r\n}\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatDatepickerModule , MatNativeDateModule } from '@angular/material';\nimport {MatButtonModule} from '@angular/material';\nimport {MatCardModule} from '@angular/material';\nimport {MatDividerModule} from '@angular/material';\nimport {MatListModule} from '@angular/material';\nimport {MatExpansionModule} from '@angular/material';\nimport {MatTableModule} from '@angular/material';\nimport {MatIconModule} from '@angular/material';\nimport {MatDialogModule} from '@angular/material';\nimport {MatPaginatorModule} from '@angular/material/paginator';\n\nconst material = [MatInputModule , MatDatepickerModule,\n   MatNativeDateModule, MatButtonModule,\n   MatDividerModule, MatCardModule, MatListModule,\n   MatExpansionModule, MatTableModule, MatIconModule,\n   MatDialogModule, MatPaginatorModule];\n\n\n@NgModule({\n  declarations: [],\n  imports: [material],\n  exports: [material]\n})\nexport class MaterialModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0dWRlbnRzZGV0YWlsL2RpYWxvZ2JveC9kaWFsb2dib3guY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<h4 mat-dialog-title>\\n    Do You want to Delete\\n</h4> \\n<mat-dialog-content>\\n    {{ name }} ?\\n</mat-dialog-content>\\n\\n<mat-dialog-actions>\\n  <button color=\\\"warn\\\" class=\\\"mr-3\\\" [mat-dialog-close]=\\\"id\\\" mat-stroked-button> Delete</button> \\n  <button color=\\\"primary\\\" [mat-dialog-close]=\\\"discard\\\" mat-raised-button> Discard</button>\\n</mat-dialog-actions>\\n\"","import { Component, OnInit , Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-dialogbox',\n  templateUrl: './dialogbox.component.html',\n  styleUrls: ['./dialogbox.component.css']\n})\nexport class DialogboxComponent implements OnInit {\n\n  constructor(\n    @Inject(MAT_DIALOG_DATA) public data: any\n  ) { }\n\n  public name = this.data.name;\n  public id = this.data.id;\n  public discard = true;\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".right{\\r\\n    float:right;\\r\\n}\\r\\n\\r\\ntable{\\r\\n    width:100%;\\r\\n}\\r\\n\\r\\nmat-icon{\\r\\n    cursor: pointer;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc3R1ZGVudHNkZXRhaWwvc3R1ZGVudHNkZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGVBQWU7QUFDbkIiLCJmaWxlIjoic3JjL2FwcC9zdHVkZW50c2RldGFpbC9zdHVkZW50c2RldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJpZ2h0e1xyXG4gICAgZmxvYXQ6cmlnaHQ7XHJcbn1cclxuXHJcbnRhYmxle1xyXG4gICAgd2lkdGg6MTAwJTtcclxufVxyXG5cclxubWF0LWljb257XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn0iXX0= */\"","module.exports = \"\\r\\n\\r\\n\\r\\n\\r\\n<!-- <mat-card-title class=\\\"text-center\\\">\\r\\n \\r\\n</mat-card-title>\\r\\n<mat-card-content>\\r\\n    <mat-accordion>\\r\\n        <mat-expansion-panel>\\r\\n              <mat-expansion-panel-header>\\r\\n                <mat-panel-title>\\r\\n                  {{ studentsData.name }}\\r\\n                </mat-panel-title>\\r\\n                 <mat-panel-description>\\r\\n                  father's Name   &nbsp; <strong> {{studentsData.fathername}} </strong>   \\r\\n                </mat-panel-description>\\r\\n              </mat-expansion-panel-header>\\r\\n             <p>\\r\\n               {{studentsData.address.street}} , {{studentsData.address.city}},{{studentsData.address.state}}, Pincode - {{studentsData.address.pincode}}.\\r\\n\\r\\n             </p>\\r\\n             <button color=\\\"accent\\\" class=\\\"right\\\" mat-flat-button>update</button>\\r\\n             <button color=\\\"warn\\\" class=\\\"right\\\" mat-button>delete</button>\\r\\n            </mat-expansion-panel>\\r\\n          </mat-accordion>\\r\\n\\r\\n</mat-card-content>\\r\\n<mat-card-footer>\\r\\n \\r\\n</mat-card-footer> -->\\r\\n\\r\\n\\r\\n<table #MatTable mat-table [dataSource]=\\\"tableData\\\" class=\\\"mat-elevation-z8\\\">\\r\\n\\r\\n  <!--- Note that these columns can be defined in any order.\\r\\n        The actual rendered columns are set as a property on the row definition\\\" -->\\r\\n\\r\\n\\r\\n\\r\\n  <!-- Name Column -->\\r\\n  <ng-container matColumnDef=\\\"Name\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n   <!-- father Name -->\\r\\n   <ng-container matColumnDef=\\\"FatherName\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> FatherName </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fathername}}</td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- Age Column -->\\r\\n  <ng-container matColumnDef=\\\"Age\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Age </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.age}} </td>\\r\\n  </ng-container>\\r\\n\\r\\n   <!-- DateofBirth Column -->\\r\\n   <ng-container matColumnDef=\\\"DoB\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> DoB </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.dob | date:\\\"MM/dd/yy\\\" }} </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- address -->\\r\\n  <ng-container matColumnDef=\\\"Address\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Address </th>\\r\\n    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.address.street}}, {{ element.address.city}} , {{ element.address.state}} - {{ element.address.pincode}}  </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <!-- updates -->\\r\\n  <ng-container matColumnDef=\\\"Update\\\">\\r\\n    <th mat-header-cell *matHeaderCellDef> Edit</th>\\r\\n    <td *matCellDef=\\\"let row\\\"> \\r\\n        <mat-icon color=\\\"primary\\\"  cursor=\\\"pointer\\\" (click)=\\\"editData(row)\\\" class=\\\"mr-3\\\">edit</mat-icon>\\r\\n      <mat-icon color=\\\"warn\\\" (click)=\\\"openDialog(row)\\\" >delete</mat-icon>\\r\\n    </td>\\r\\n  </ng-container>\\r\\n\\r\\n  <tr mat-header-row *matHeaderRowDef=\\\"displayData sticky: true\\\"  ></tr>\\r\\n  <tr mat-row *matRowDef=\\\"let row; columns: displayData;\\\"></tr>\\r\\n</table>\\r\\n<mat-paginator\\r\\n             \\r\\n              [pageSizeOptions]=\\\"pageSizeOptions\\\"\\r\\n              [pageSize]=\\\"4\\\"\\r\\n              \\r\\n>\\r\\n</mat-paginator>\"","import { Component, OnInit, Output, Input, AfterViewInit,  EventEmitter , ViewChild, ChangeDetectorRef } from '@angular/core';\r\nimport { Source } from '../interface/studentData';\r\nimport { MatDialog , MatTableDataSource , MatPaginator, MatTable } from '@angular/material';\r\nimport { DialogboxComponent } from './dialogbox/dialogbox.component';\r\nimport { DbconnectService } from '../dbconnect.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-studentsdetail',\r\n  templateUrl: './studentsdetail.component.html',\r\n  styleUrls: ['./studentsdetail.component.css'],\r\n})\r\n\r\nexport class StudentsdetailComponent implements OnInit {\r\n\r\nconstructor(public dialog: MatDialog , public database: DbconnectService ,\r\n            private cd: ChangeDetectorRef) { }\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @Output()updateFormEvent = new EventEmitter<Source>();\r\n  @Output()deletedataEvent = new EventEmitter<string>();\r\n\r\n  public data;\r\n  public tableData;\r\n  pageSizeOptions: number[] = [4, 8, 12, 16];\r\n\r\npublic displayData: string[] = ['Name', 'FatherName' , 'Age', 'DoB', 'Address', 'Update' ];\r\n\r\npublic ngOnInit() {\r\n  this.database.allStudents()\r\n  .subscribe(\r\n    (res) => {\r\n      this.tableData = new MatTableDataSource(res);\r\n      this.tableData.paginator = this.paginator;\r\n        },\r\n    (err) => {\r\n      console.log(err);\r\n    }\r\n  );\r\n}\r\n\r\n\r\nopenDialog(row) {\r\n const dialogRef = this.dialog.open(DialogboxComponent , {data : {\r\n   name: row.name,\r\n   id : row._id\r\n }});\r\n dialogRef.afterClosed().subscribe((result) => {\r\n  if (typeof(result) === 'string') {\r\n        this.deletedataEvent.emit(result);\r\n\r\n  } });\r\n\r\n}\r\n\r\neditData(row) {\r\nthis.updateFormEvent.emit(row);\r\n}\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}